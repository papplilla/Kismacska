-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity fir_hw_coeff_hw_V_rom is 
    generic(
             DWIDTH     : integer := 15; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 128
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of fir_hw_coeff_hw_V_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "000000000011001", 1 => "111111111101010", 2 => "111111111010100", 
    3 => "111111110101110", 4 => "111111101110100", 5 => "111111100100110", 
    6 => "111111010111111", 7 => "111111000111101", 8 => "111110110100000", 
    9 => "111110011100111", 10 => "111110000010100", 11 => "111101100101011", 
    12 => "111101000110001", 13 => "111100100101101", 14 => "111100000101001", 
    15 => "111011100110000", 16 => "111011001001100", 17 => "111010110001100", 
    18 => "111010011111100", 19 => "111010010100110", 20 => "111010010010111", 
    21 => "111010011010101", 22 => "111010101100110", 23 => "111011001001010", 
    24 => "111011101111111", 25 => "111100011111110", 26 => "111101010111010", 
    27 => "111110010100011", 28 => "111111010100110", 29 => "000000010101011", 
    30 => "000001010011011", 31 => "000010001011101", 32 => "000010111010111", 
    33 => "000011011110100", 34 => "000011110100011", 35 => "000011111010101", 
    36 => "000011110000100", 37 => "000011010110001", 38 => "000010101100010", 
    39 => "000001110101001", 40 => "000000110011011", 41 => "111111101010110", 
    42 => "111110011111110", 43 => "111101010111000", 44 => "111100010101110", 
    45 => "111011100000111", 46 => "111010111101001", 47 => "111010101110100", 
    48 => "111010111000011", 49 => "111011011100110", 50 => "111100011100110", 
    51 => "111101110111111", 52 => "111111101100001", 53 => "000001110110100", 
    54 => "000100010010100", 55 => "000110111010100", 56 => "001001101000100", 
    57 => "001100010101011", 58 => "001110111010001", 59 => "010001010000000", 
    60 => "010011010000100", 61 => "010100110110010", 62 => "010101111100101", 
    63 to 64=> "010110100000101", 65 => "010101111100101", 66 => "010100110110010", 
    67 => "010011010000100", 68 => "010001010000000", 69 => "001110111010001", 
    70 => "001100010101011", 71 => "001001101000100", 72 => "000110111010100", 
    73 => "000100010010100", 74 => "000001110110100", 75 => "111111101100001", 
    76 => "111101110111111", 77 => "111100011100110", 78 => "111011011100110", 
    79 => "111010111000011", 80 => "111010101110100", 81 => "111010111101001", 
    82 => "111011100000111", 83 => "111100010101110", 84 => "111101010111000", 
    85 => "111110011111110", 86 => "111111101010110", 87 => "000000110011011", 
    88 => "000001110101001", 89 => "000010101100010", 90 => "000011010110001", 
    91 => "000011110000100", 92 => "000011111010101", 93 => "000011110100011", 
    94 => "000011011110100", 95 => "000010111010111", 96 => "000010001011101", 
    97 => "000001010011011", 98 => "000000010101011", 99 => "111111010100110", 
    100 => "111110010100011", 101 => "111101010111010", 102 => "111100011111110", 
    103 => "111011101111111", 104 => "111011001001010", 105 => "111010101100110", 
    106 => "111010011010101", 107 => "111010010010111", 108 => "111010010100110", 
    109 => "111010011111100", 110 => "111010110001100", 111 => "111011001001100", 
    112 => "111011100110000", 113 => "111100000101001", 114 => "111100100101101", 
    115 => "111101000110001", 116 => "111101100101011", 117 => "111110000010100", 
    118 => "111110011100111", 119 => "111110110100000", 120 => "111111000111101", 
    121 => "111111010111111", 122 => "111111100100110", 123 => "111111101110100", 
    124 => "111111110101110", 125 => "111111111010100", 126 => "111111111101010", 
    127 => "000000000011001" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity fir_hw_coeff_hw_V is
    generic (
        DataWidth : INTEGER := 15;
        AddressRange : INTEGER := 128;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of fir_hw_coeff_hw_V is
    component fir_hw_coeff_hw_V_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    fir_hw_coeff_hw_V_rom_U :  component fir_hw_coeff_hw_V_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


