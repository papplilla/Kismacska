// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _fir_hw_HH_
#define _fir_hw_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "fir_hw_mac_muladdbkb.h"
#include "fir_hw_tomb_V.h"
#include "fir_hw_coeff_hw_V.h"

namespace ap_rtl {

struct fir_hw : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<24> > input_V;
    sc_out< sc_lv<24> > res_V;
    sc_out< sc_logic > res_V_ap_vld;


    // Module declarations
    fir_hw(sc_module_name name);
    SC_HAS_PROCESS(fir_hw);

    ~fir_hw();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    fir_hw_tomb_V* tomb_V_U;
    fir_hw_coeff_hw_V* coeff_hw_V_U;
    fir_hw_mac_muladdbkb<1,1,15,24,45,45>* fir_hw_mac_muladdbkb_U1;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<7> > tomb_V_address0;
    sc_signal< sc_logic > tomb_V_ce0;
    sc_signal< sc_logic > tomb_V_we0;
    sc_signal< sc_lv<24> > tomb_V_d0;
    sc_signal< sc_lv<24> > tomb_V_q0;
    sc_signal< sc_lv<7> > coeff_hw_V_address0;
    sc_signal< sc_logic > coeff_hw_V_ce0;
    sc_signal< sc_lv<15> > coeff_hw_V_q0;
    sc_signal< sc_lv<7> > i_1_fu_193_p2;
    sc_signal< sc_lv<7> > i_1_reg_527;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > tmp_2_fu_187_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > tmp_fu_213_p3;
    sc_signal< sc_lv<8> > i_2_fu_227_p2;
    sc_signal< sc_lv<8> > i_2_reg_550;
    sc_signal< sc_lv<45> > grp_fu_516_p3;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<7> > i_reg_152;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<45> > p_Val2_s_reg_164;
    sc_signal< sc_lv<8> > i1_reg_176;
    sc_signal< sc_lv<64> > tmp_5_fu_199_p1;
    sc_signal< sc_lv<64> > tmp_3_fu_204_p1;
    sc_signal< sc_lv<64> > tmp_7_fu_221_p1;
    sc_signal< sc_lv<32> > i1_cast_fu_209_p1;
    sc_signal< sc_lv<1> > tmp_18_fu_267_p1;
    sc_signal< sc_lv<1> > tmp_16_fu_251_p3;
    sc_signal< sc_lv<15> > tmp_8_fu_277_p4;
    sc_signal< sc_lv<1> > tmp_1_fu_271_p2;
    sc_signal< sc_lv<16> > tmp_9_fu_287_p3;
    sc_signal< sc_lv<1> > tmp_s_fu_295_p2;
    sc_signal< sc_lv<1> > signbit_fu_233_p3;
    sc_signal< sc_lv<1> > qb_assign_fu_301_p2;
    sc_signal< sc_lv<24> > p_Val2_2_fu_241_p4;
    sc_signal< sc_lv<24> > tmp_4_fu_307_p1;
    sc_signal< sc_lv<24> > p_Val2_3_fu_311_p2;
    sc_signal< sc_lv<1> > newsignbit_fu_317_p3;
    sc_signal< sc_lv<1> > tmp_17_fu_259_p3;
    sc_signal< sc_lv<1> > tmp_6_fu_325_p2;
    sc_signal< sc_lv<3> > tmp_10_fu_345_p4;
    sc_signal< sc_lv<4> > tmp_11_fu_361_p4;
    sc_signal< sc_lv<1> > carry_fu_331_p2;
    sc_signal< sc_lv<1> > Range1_all_ones_fu_371_p2;
    sc_signal< sc_lv<1> > Range1_all_zeros_fu_377_p2;
    sc_signal< sc_lv<1> > tmp_20_fu_337_p3;
    sc_signal< sc_lv<1> > Range2_all_ones_fu_355_p2;
    sc_signal< sc_lv<1> > tmp_12_fu_391_p2;
    sc_signal< sc_lv<1> > p_41_i_fu_397_p2;
    sc_signal< sc_lv<1> > deleted_zeros_fu_383_p3;
    sc_signal< sc_lv<1> > p_not_i_fu_417_p2;
    sc_signal< sc_lv<1> > brmerge_i_fu_423_p2;
    sc_signal< sc_lv<1> > tmp_13_fu_429_p2;
    sc_signal< sc_lv<1> > deleted_ones_fu_403_p3;
    sc_signal< sc_lv<1> > p_38_i_fu_411_p2;
    sc_signal< sc_lv<1> > brmerge40_demorgan_i_fu_441_p2;
    sc_signal< sc_lv<1> > tmp1_demorgan_fu_447_p2;
    sc_signal< sc_lv<1> > tmp1_fu_453_p2;
    sc_signal< sc_lv<1> > underflow_fu_459_p2;
    sc_signal< sc_lv<1> > overflow_fu_435_p2;
    sc_signal< sc_lv<1> > tmp2_fu_471_p2;
    sc_signal< sc_lv<1> > brmerge_i_i_fu_465_p2;
    sc_signal< sc_lv<1> > underflow_not_fu_477_p2;
    sc_signal< sc_lv<24> > p_Val2_5_mux_fu_483_p3;
    sc_signal< sc_lv<24> > p_Val2_5_fu_491_p3;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<7> ap_const_lv7_7F;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<45> ap_const_lv45_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<8> ap_const_lv8_7F;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<32> ap_const_lv32_2C;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_29;
    static const sc_lv<32> ap_const_lv32_2A;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<24> ap_const_lv24_7FFFFF;
    static const sc_lv<24> ap_const_lv24_800000;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Range1_all_ones_fu_371_p2();
    void thread_Range1_all_zeros_fu_377_p2();
    void thread_Range2_all_ones_fu_355_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_brmerge40_demorgan_i_fu_441_p2();
    void thread_brmerge_i_fu_423_p2();
    void thread_brmerge_i_i_fu_465_p2();
    void thread_carry_fu_331_p2();
    void thread_coeff_hw_V_address0();
    void thread_coeff_hw_V_ce0();
    void thread_deleted_ones_fu_403_p3();
    void thread_deleted_zeros_fu_383_p3();
    void thread_i1_cast_fu_209_p1();
    void thread_i_1_fu_193_p2();
    void thread_i_2_fu_227_p2();
    void thread_newsignbit_fu_317_p3();
    void thread_overflow_fu_435_p2();
    void thread_p_38_i_fu_411_p2();
    void thread_p_41_i_fu_397_p2();
    void thread_p_Val2_2_fu_241_p4();
    void thread_p_Val2_3_fu_311_p2();
    void thread_p_Val2_5_fu_491_p3();
    void thread_p_Val2_5_mux_fu_483_p3();
    void thread_p_not_i_fu_417_p2();
    void thread_qb_assign_fu_301_p2();
    void thread_res_V();
    void thread_res_V_ap_vld();
    void thread_signbit_fu_233_p3();
    void thread_tmp1_demorgan_fu_447_p2();
    void thread_tmp1_fu_453_p2();
    void thread_tmp2_fu_471_p2();
    void thread_tmp_10_fu_345_p4();
    void thread_tmp_11_fu_361_p4();
    void thread_tmp_12_fu_391_p2();
    void thread_tmp_13_fu_429_p2();
    void thread_tmp_16_fu_251_p3();
    void thread_tmp_17_fu_259_p3();
    void thread_tmp_18_fu_267_p1();
    void thread_tmp_1_fu_271_p2();
    void thread_tmp_20_fu_337_p3();
    void thread_tmp_2_fu_187_p2();
    void thread_tmp_3_fu_204_p1();
    void thread_tmp_4_fu_307_p1();
    void thread_tmp_5_fu_199_p1();
    void thread_tmp_6_fu_325_p2();
    void thread_tmp_7_fu_221_p1();
    void thread_tmp_8_fu_277_p4();
    void thread_tmp_9_fu_287_p3();
    void thread_tmp_fu_213_p3();
    void thread_tmp_s_fu_295_p2();
    void thread_tomb_V_address0();
    void thread_tomb_V_ce0();
    void thread_tomb_V_d0();
    void thread_tomb_V_we0();
    void thread_underflow_fu_459_p2();
    void thread_underflow_not_fu_477_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
